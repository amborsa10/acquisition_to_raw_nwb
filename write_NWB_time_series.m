function nwb = write_NWB_time_series(nwb,fs,ephys_raw,opto_raw,galvo_raw) % add trial trig raw, cam trig raw

    number_of_electrodes = size(ephys_raw,2);
    number_of_leds = size(opto_raw,2);
    number_of_galvos = size(galvo_raw,2);
    
    % saving ElectricalSeries data
    electrodes_object_view = types.untyped.ObjectView(...
        '/general/extracellular_ephys/electrodes');
    electrode_table_region = types.hdmf_common.DynamicTableRegion(...
        'table', electrodes_object_view,...
        'description', 'all electrodes',...
        'data', (0:number_of_electrodes-1)');
    
    ephys_compressed = types.untyped.DataPipe(...
        'data', ephys_raw,...
        'maxShape', [Inf number_of_electrodes],...
        'axis',1);
    electrical_series = types.core.ElectricalSeries(...
        'starting_time', 0.0,...
        'starting_time_rate', fs,...
        'data', ephys_compressed,...
        'electrodes', electrode_table_region,...
        'data_unit', 'volts',...
        'data_conversion',1e-6);
    nwb.acquisition.set('ElectricalSeries',electrical_series);
    
    % saving OptogeneticSeries data
    for i=1:number_of_leds
        opto_compressed = types.untyped.DataPipe(...
            'data', opto_raw(:,i),...
            'maxShape', [Inf 1],...
            'chunkSize', [128 1],...
            'axis', 1);
        optogenetic_series = types.core.OptogeneticSeries(...
            'starting_time', 0.0,...
            'starting_time_rate', fs,...
            'data', opto_compressed,...
            'site', types.untyped.SoftLink(['/general/optogenetics/Site' num2str(i)]));
        nwb.acquisition.set(['OptogeneticSeries' num2str(i)], optogenetic_series);
    end
    
    % saving GalvoTimeSeries data
    for i=1:number_of_galvos
        galvo_compressed = types.untyped.DataPipe(...
            'data', galvo_raw(:,i),...
            'maxShape', [Inf 1],...
            'chunkSize', [128 1],...
            'axis',1);
        galvo_time_series = types.core.TimeSeries(...
            'description', 'galvo',...
            'starting_time', 0.0,...
            'starting_time_rate', fs,...
            'data', galvo_compressed,...
            'data_unit','volts');
        nwb.acquisition.set(['GalvoTimeSeries' num2str(i)], galvo_time_series);
    end

end